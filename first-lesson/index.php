<?php 
require_once __DIR__ . '/protected/Db.php';
require __DIR__ . '/protected/Models/Product.php';
require __DIR__ . '/protected/Models/Article.php';

$news = Article::getLastNews(3);

foreach($news as $article){
    include __DIR__ . '/news-template.php';
}
if(isset($_GET['create-art'])){
$article = new Article;
$args = [
    ':title' => 'Заголовок',
    ':content' => 'Контент',
];
$res = $article->create($args);
}


// var_dump($news);

// for ($i=0; $i < 3; $i++) { 
//     $new = $news[$i];
//     include __DIR__ . '/news-template.php';
// }

// $data = Product::findAll();
// $data = Product::findById(3);
// var_dump($data);

// $product = new Product();
// $data = $product->findAll();
// var_dump($data);

// $db = new Db();
// var_dump(Product::class);
// var_dump($db->query('SELECT * FROM `products`', Product::class));


// 1. В качестве основы своего проекта возьмите то, что сделано нами 
//    на уроке. Прочтите внимательно код, еще раз повторите, как он работает. 
// 
// 2. Улучшите класс Db.
//    Во-первых сократите код в методе query(), отвечающий за преобразование
//    данных в объекты нужного класса до одной строчки 
//    (читайте руководство по PDO, чтобы понять, как это сделать!)
// 
//    Во-вторых добавьте в этот метод возможность передать подстановки в 
//    запрос.
// 
//    И в-третьих, сейчас мы написали только метод query(), предназначенный
//    для выполнения запросов, возвращающих данные. Напишите еще один метод 
//    execute($query, $params=[]), который будет выполнять запросы, 
//    не возвращающие данные (например INSERT, UPDATE) и возвращать лишь 
//    true/false в зависимости от того, удачно ли выполнился запрос. 
// 
// 3. Протестируйте работу нового метода, для чего заведите в проекте папку
//    tests и в ней размещайте скрипты, которые наглядно докажут 
//    работоспособность вашего кода.
// 
// 4. В абстрактной модели добавьте метод 
//    public static function findById($id). 
//    Он должен вернуть ОДНУ запись из таблицы данной модели, с указанным 
//    первичным ключом. Или false, если таковой записи не нашлось.
// 
// 5. Сделайте таблицу новостей. Добавьте в нее 3-4 новости. На главной 
//    странице сайта (index.php) сделайте вывод 3 последних новостей. 
//    Используйте модель Article для получения данных (возможно, вам 
//    придется добавить какой-то еще метод в эту модель). Для передачи 
//    данных в шаблон - просто include файла с шаблоном.
// 
// 6. Каждая новость на главной странице должна быть снабжена ссылкой на 
//    страницу /article.php?id=NNN, где NNN - номер этой новости. 
//    Разработайте полностью страницу article.php